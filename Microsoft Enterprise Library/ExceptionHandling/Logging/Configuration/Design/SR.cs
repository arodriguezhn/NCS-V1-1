// WARNING:
// This file generated by the Microsoft DataWarehouse String Resource Tool 1.13.5000.0
// from information in SR.strings.   
// DO NO MODIFY THIS FILE'S CONTENTS, THEY WILL BE OVERWRITTEN
//
namespace Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.Configuration.Design
{
	using System;
	using System.Resources;
	using System.Globalization;

	internal class SR
	{
		public static string CategoryGeneral
		{
			get { return Keys.GetString( Keys.CategoryGeneral ); }
		}
		public static string LoggingHandlerName
		{
			get { return Keys.GetString( Keys.LoggingHandlerName ); }
		}
		public static string DefaultLogCategoryDescription
		{
			get { return Keys.GetString( Keys.DefaultLogCategoryDescription ); }
		}
		public static string DefaultEventIdDescription
		{
			get { return Keys.GetString( Keys.DefaultEventIdDescription ); }
		}
		public static string DefaultSeverityDescription
		{
			get { return Keys.GetString( Keys.DefaultSeverityDescription ); }
		}
		public static string DefaultTitleDescription
		{
			get { return Keys.GetString( Keys.DefaultTitleDescription ); }
		}
		public static string DefaultTitle
		{
			get { return Keys.GetString( Keys.DefaultTitle ); }
		}
		public static string FormatterTypeNameDescription
		{
			get { return Keys.GetString( Keys.FormatterTypeNameDescription ); }
		}
		public static string MinimumPriorityDescription
		{
			get { return Keys.GetString( Keys.MinimumPriorityDescription ); }
		}
		public static string DefaultCategory
		{
			get { return Keys.GetString( Keys.DefaultCategory ); }
		}

		internal class Keys 
		{
			static ResourceManager resourceManager = 
				new ResourceManager("Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.Configuration.Design.SR", typeof(Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.Configuration.Design.SR).Module.Assembly );

			public static string GetString( string key )
			{
				return resourceManager.GetString( key, Resources.CultureInfo );
			}
			public static string GetString( string key, params object[] args )
			{
				string msg = resourceManager.GetString( key, Resources.CultureInfo );
				msg = string.Format( msg, args );
				return msg;
			}

			public const string CategoryGeneral = "CategoryGeneral";
			public const string LoggingHandlerName = "LoggingHandlerName";
			public const string DefaultLogCategoryDescription = "DefaultLogCategoryDescription";
			public const string DefaultEventIdDescription = "DefaultEventIdDescription";
			public const string DefaultSeverityDescription = "DefaultSeverityDescription";
			public const string DefaultTitleDescription = "DefaultTitleDescription";
			public const string DefaultTitle = "DefaultTitle";
			public const string FormatterTypeNameDescription = "FormatterTypeNameDescription";
			public const string MinimumPriorityDescription = "MinimumPriorityDescription";
			public const string DefaultCategory = "DefaultCategory";
		}


	}
}
