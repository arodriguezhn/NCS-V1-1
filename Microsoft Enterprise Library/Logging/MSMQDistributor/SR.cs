// WARNING:
// This file generated by the Microsoft DataWarehouse String Resource Tool 1.13.5000.0
// from information in SR.strings.   
// DO NO MODIFY THIS FILE'S CONTENTS, THEY WILL BE OVERWRITTEN
//
namespace Microsoft.Practices.EnterpriseLibrary.Logging.MsmqDistributor
{
	using System;
	using System.Resources;
	using System.Globalization;

	internal class SR
	{
		public static string ApplicationLogName
		{
			get { return Keys.GetString( Keys.ApplicationLogName ); }
		}
		public static string DistributorEventLoggerDefaultApplicationName
		{
			get { return Keys.GetString( Keys.DistributorEventLoggerDefaultApplicationName ); }
		}
		public static string InstallerCannotReadServiceName
		{
			get { return Keys.GetString( Keys.InstallerCannotReadServiceName ); }
		}
		public static string ProcessQMsgSeeDetails
		{
			get { return Keys.GetString( Keys.ProcessQMsgSeeDetails ); }
		}
		public static string InitializeComponentStartedMessage
		{
			get { return Keys.GetString( Keys.InitializeComponentStartedMessage ); }
		}
		public static string InitializeComponentStarted
		{
			get { return Keys.GetString( Keys.InitializeComponentStarted ); }
		}
		public static string ErrorLoadingDistributorConfiguration
		{
			get { return Keys.GetString( Keys.ErrorLoadingDistributorConfiguration ); }
		}
		public static string InitializeComponentCompletedMessage
		{
			get { return Keys.GetString( Keys.InitializeComponentCompletedMessage ); }
		}
		public static string InitializeComponentCompleted
		{
			get { return Keys.GetString( Keys.InitializeComponentCompleted ); }
		}
		public static string ErrorInitializingService
		{
			get { return Keys.GetString( Keys.ErrorInitializingService ); }
		}
		public static string InitializeStartupSequenceStartedMessage
		{
			get { return Keys.GetString( Keys.InitializeStartupSequenceStartedMessage ); }
		}
		public static string InitializeStartupSequenceFinishedMessage
		{
			get { return Keys.GetString( Keys.InitializeStartupSequenceFinishedMessage ); }
		}
		public static string InitializeStartupSequenceErrorMessage
		{
			get { return Keys.GetString( Keys.InitializeStartupSequenceErrorMessage ); }
		}
		public static string ValidationStarted
		{
			get { return Keys.GetString( Keys.ValidationStarted ); }
		}
		public static string ValidationComplete
		{
			get { return Keys.GetString( Keys.ValidationComplete ); }
		}
		public static string ValidationError
		{
			get { return Keys.GetString( Keys.ValidationError ); }
		}
		public static string ListenerStopStartedMessage
		{
			get { return Keys.GetString( Keys.ListenerStopStartedMessage ); }
		}
		public static string ListenerStopStarted
		{
			get { return Keys.GetString( Keys.ListenerStopStarted ); }
		}
		public static string ListenerStopCompletedMessage
		{
			get { return Keys.GetString( Keys.ListenerStopCompletedMessage ); }
		}
		public static string ListenerStopCompleted (string attempts)
		{
			return Keys.GetString( Keys.ListenerStopCompleted, attempts );
		}
		public static string StopListenerWarningMessage
		{
			get { return Keys.GetString( Keys.StopListenerWarningMessage ); }
		}
		public static string ListenerCannotStop (string attempts)
		{
			return Keys.GetString( Keys.ListenerCannotStop, attempts );
		}
		public static string ListenerStopErrorMessage
		{
			get { return Keys.GetString( Keys.ListenerStopErrorMessage ); }
		}
		public static string ListenerStopError
		{
			get { return Keys.GetString( Keys.ListenerStopError ); }
		}
		public static string ListenerStartingMessage
		{
			get { return Keys.GetString( Keys.ListenerStartingMessage ); }
		}
		public static string ListenerStarting
		{
			get { return Keys.GetString( Keys.ListenerStarting ); }
		}
		public static string ListenerStartCompleteMessage
		{
			get { return Keys.GetString( Keys.ListenerStartCompleteMessage ); }
		}
		public static string ListenerStartComplete (int interval)
		{
			return Keys.GetString( Keys.ListenerStartComplete, interval );
		}
		public static string ListenerStartErrorMessage
		{
			get { return Keys.GetString( Keys.ListenerStartErrorMessage ); }
		}
		public static string ListenerStartError
		{
			get { return Keys.GetString( Keys.ListenerStartError ); }
		}
		public static string ServiceStartComplete (string service)
		{
			return Keys.GetString( Keys.ServiceStartComplete, service );
		}
		public static string ServiceStartError (string service)
		{
			return Keys.GetString( Keys.ServiceStartError, service );
		}
		public static string ServiceStopComplete (string service)
		{
			return Keys.GetString( Keys.ServiceStopComplete, service );
		}
		public static string ServiceStopWarning (string service)
		{
			return Keys.GetString( Keys.ServiceStopWarning, service );
		}
		public static string ServiceStopError (string service)
		{
			return Keys.GetString( Keys.ServiceStopError, service );
		}
		public static string ServicePausedSuccess (string service)
		{
			return Keys.GetString( Keys.ServicePausedSuccess, service );
		}
		public static string ServicePauseWarning (string service)
		{
			return Keys.GetString( Keys.ServicePauseWarning, service );
		}
		public static string ServicePauseError (string service)
		{
			return Keys.GetString( Keys.ServicePauseError, service );
		}
		public static string ServiceUnableToShutdown
		{
			get { return Keys.GetString( Keys.ServiceUnableToShutdown ); }
		}
		public static string ServiceResumeComplete (string service)
		{
			return Keys.GetString( Keys.ServiceResumeComplete, service );
		}
		public static string ServiceResumeError (string service)
		{
			return Keys.GetString( Keys.ServiceResumeError, service );
		}
		public static string QueueTimedEventError
		{
			get { return Keys.GetString( Keys.QueueTimedEventError ); }
		}
		public static string ServiceControllerStopError (string service)
		{
			return Keys.GetString( Keys.ServiceControllerStopError, service );
		}
		public static string ServiceControllerStopException (string p)
		{
			return Keys.GetString( Keys.ServiceControllerStopException, p );
		}
		public static string MsmqInvalidTransactionUsage (string msmqPath)
		{
			return Keys.GetString( Keys.MsmqInvalidTransactionUsage, msmqPath );
		}
		public static string MsmqReceiveTimeout (string msmqPath)
		{
			return Keys.GetString( Keys.MsmqReceiveTimeout, msmqPath );
		}
		public static string MsmqAccessDenied (string msmqPath, string identity)
		{
			return Keys.GetString( Keys.MsmqAccessDenied, msmqPath, identity );
		}
		public static string MsmqReceiveError (string msmqPath)
		{
			return Keys.GetString( Keys.MsmqReceiveError, msmqPath );
		}
		public static string MsmqReceiveGeneralError (string msmqPath)
		{
			return Keys.GetString( Keys.MsmqReceiveGeneralError, msmqPath );
		}
		public static string MsmqLogReceived (string messageBody)
		{
			return Keys.GetString( Keys.MsmqLogReceived, messageBody );
		}
		public static string UnknownError
		{
			get { return Keys.GetString( Keys.UnknownError ); }
		}

		internal class Keys 
		{
			static ResourceManager resourceManager = 
				new ResourceManager("Microsoft.Practices.EnterpriseLibrary.Logging.MsmqDistributor.SR", typeof(Microsoft.Practices.EnterpriseLibrary.Logging.MsmqDistributor.SR).Module.Assembly );

			public static string GetString( string key )
			{
				return resourceManager.GetString( key, Resources.CultureInfo );
			}
			public static string GetString( string key, params object[] args )
			{
				string msg = resourceManager.GetString( key, Resources.CultureInfo );
				msg = string.Format( msg, args );
				return msg;
			}

			public const string ApplicationLogName = "ApplicationLogName";
			public const string DistributorEventLoggerDefaultApplicationName = "DistributorEventLoggerDefaultApplicationName";
			public const string InstallerCannotReadServiceName = "InstallerCannotReadServiceName";
			public const string ProcessQMsgSeeDetails = "ProcessQMsgSeeDetails";
			public const string InitializeComponentStartedMessage = "InitializeComponentStartedMessage";
			public const string InitializeComponentStarted = "InitializeComponentStarted";
			public const string ErrorLoadingDistributorConfiguration = "ErrorLoadingDistributorConfiguration";
			public const string InitializeComponentCompletedMessage = "InitializeComponentCompletedMessage";
			public const string InitializeComponentCompleted = "InitializeComponentCompleted";
			public const string ErrorInitializingService = "ErrorInitializingService";
			public const string InitializeStartupSequenceStartedMessage = "InitializeStartupSequenceStartedMessage";
			public const string InitializeStartupSequenceFinishedMessage = "InitializeStartupSequenceFinishedMessage";
			public const string InitializeStartupSequenceErrorMessage = "InitializeStartupSequenceErrorMessage";
			public const string ValidationStarted = "ValidationStarted";
			public const string ValidationComplete = "ValidationComplete";
			public const string ValidationError = "ValidationError";
			public const string ListenerStopStartedMessage = "ListenerStopStartedMessage";
			public const string ListenerStopStarted = "ListenerStopStarted";
			public const string ListenerStopCompletedMessage = "ListenerStopCompletedMessage";
			public const string ListenerStopCompleted = "ListenerStopCompleted";
			public const string StopListenerWarningMessage = "StopListenerWarningMessage";
			public const string ListenerCannotStop = "ListenerCannotStop";
			public const string ListenerStopErrorMessage = "ListenerStopErrorMessage";
			public const string ListenerStopError = "ListenerStopError";
			public const string ListenerStartingMessage = "ListenerStartingMessage";
			public const string ListenerStarting = "ListenerStarting";
			public const string ListenerStartCompleteMessage = "ListenerStartCompleteMessage";
			public const string ListenerStartComplete = "ListenerStartComplete";
			public const string ListenerStartErrorMessage = "ListenerStartErrorMessage";
			public const string ListenerStartError = "ListenerStartError";
			public const string ServiceStartComplete = "ServiceStartComplete";
			public const string ServiceStartError = "ServiceStartError";
			public const string ServiceStopComplete = "ServiceStopComplete";
			public const string ServiceStopWarning = "ServiceStopWarning";
			public const string ServiceStopError = "ServiceStopError";
			public const string ServicePausedSuccess = "ServicePausedSuccess";
			public const string ServicePauseWarning = "ServicePauseWarning";
			public const string ServicePauseError = "ServicePauseError";
			public const string ServiceUnableToShutdown = "ServiceUnableToShutdown";
			public const string ServiceResumeComplete = "ServiceResumeComplete";
			public const string ServiceResumeError = "ServiceResumeError";
			public const string QueueTimedEventError = "QueueTimedEventError";
			public const string ServiceControllerStopError = "ServiceControllerStopError";
			public const string ServiceControllerStopException = "ServiceControllerStopException";
			public const string MsmqInvalidTransactionUsage = "MsmqInvalidTransactionUsage";
			public const string MsmqReceiveTimeout = "MsmqReceiveTimeout";
			public const string MsmqAccessDenied = "MsmqAccessDenied";
			public const string MsmqReceiveError = "MsmqReceiveError";
			public const string MsmqReceiveGeneralError = "MsmqReceiveGeneralError";
			public const string MsmqLogReceived = "MsmqLogReceived";
			public const string UnknownError = "UnknownError";
		}


	}
}
