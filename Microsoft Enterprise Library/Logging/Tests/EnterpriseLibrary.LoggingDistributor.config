<?xml version="1.0" encoding="utf-8" ?>
<loggingDistributorConfiguration xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xmlSerializerSection type="Microsoft.Practices.EnterpriseLibrary.Logging.Distributor.Configuration.DistributorSettings, Microsoft.Practices.EnterpriseLibrary.Logging">
        <enterpriseLibrary.loggingDistributorSettings xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns="http://www.microsoft.com/practices/enterpriselibrary/08-31-2004/loggingdistributor" defaultCategory="AppError" defaultFormatter="XmlFormat">
            <distributorService serviceName="Enterprise Library Logging Distributor Service" queueTimerInterval="1000"
                msmqPath=".\Private$\entlib" />
            <sinks>
                <sink xsi:type="CustomSinkData" name="MockSink" type="Microsoft.Practices.EnterpriseLibrary.Logging.Sinks.Tests.MockLogSink, Microsoft.Practices.EnterpriseLibrary.Logging" />
                <sink xsi:type="CustomSinkData" name="MockSink2" type="Microsoft.Practices.EnterpriseLibrary.Logging.Sinks.Tests.MockLogSink, Microsoft.Practices.EnterpriseLibrary.Logging" />
                <sink xsi:type="CustomSinkData" name="CustomLogEntrySink" type="Microsoft.Practices.EnterpriseLibrary.Logging.Sinks.Tests.CustomLogEntrySink, Microsoft.Practices.EnterpriseLibrary.Logging" />
                <sink xsi:type="DatabaseSinkData" name="DatabaseSink" 
                    databaseInstanceName="Service_Dflt" storedProcName="EntLibLogInsert" />
                <sink xsi:type="DatabaseSinkData" name="DatabaseSink2" 
                    databaseInstanceName="LoggingDb" storedProcName="WriteLog" />
                <sink xsi:type="EventLogSinkData" name="ApplicationLogSink" 
                    eventSourceName="Unit Test" eventLogName="EntLib Tests" />
                <sink xsi:type="FlatFileSinkData" name="SampleTextFileSink" 
                    flatFileName="myEntLib.log" flatFilePath="" header="---------------- Log Entry ----------------"
                    footer="------------------- End -------------------" />
                <sink xsi:type="EmailSinkData" name="SampleEmailSink" 
                    smtpServer="smtphost" toAddress="destination@address.com" fromAddress="from@entlib.com"
                    subjectLineStarter="EntLib Logging:" subjectLineEnder="" />
                <sink xsi:type="MsmqSinkData" name="MsmqSink" queuePath=".\private$\entlib" />
                <sink xsi:type="CustomSinkData" name="SampleInstrumentationSink" type="Microsoft.Practices.EnterpriseLibrary.Logging.Sinks.WMILogSink, Microsoft.Practices.EnterpriseLibrary.Logging" />
            </sinks>
            <formatters>
                <formatter xsi:type="TextFormatterData" name="XmlFormat">
                    <template>
						<![CDATA[<EntLibLog>{newline}{tab}<message>{message}</message>{newline}{tab}<timestamp>{timestamp}</timestamp>{newline}{tab}<title>{title}</title>{newline}</EntLibLog>]]>
					</template>
                </formatter>
                <formatter xsi:type="TextFormatterData" name="SimpleTextFormat">
                    <template>
						<![CDATA[{timestamp}: {title}{newline}{newline}{message}]]>
					</template>
                </formatter>
                <formatter xsi:type="CustomTextFormatterData" name="CustomTextFormat" type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.Tests.CustomTextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging">
                    <template>
						<![CDATA[Timestamp: {timestamp}{newline}Title: {title}{newline}{newline}Acme Field1: {field1}{newline}Acme Field2: {field2}{newline}Acme Field3: {field3}{newline}{newline}Message: {message}]]>
					</template>
                </formatter>
                <formatter xsi:type="TextFormatterData" name="DictionaryFormat">
                    <template>
						<![CDATA[Timestamp: {timestamp}{newline}Title: {title}{newline}{newline}Message: {message}{newline}{newline}Extended Properties:{newline}{dictionary(Key: {key}{tab}{tab}Value: {value}{newline})}]]>
					</template>
                </formatter>
            </formatters>
            <categories>
                <category name="FormattedCategory">
                    <destinations>
                        <destination name="ApplicationLogSink1" sink="ApplicationLogSink" format="SimpleTextFormat" />
                    </destinations>
                </category>
                <category name="DictionaryCategory">
                    <destinations>
                        <destination name="DictionaryFormat" sink="ApplicationLogSink" format="DictionaryFormat" />
                    </destinations>
                </category>
                <category name="CustomFormattedCategory">
                    <destinations>
                        <destination name="CustomTextFormat" sink="ApplicationLogSink" format="CustomTextFormat" />
                    </destinations>
                </category>
                <category name="MockCategoryOne">
                    <destinations>
                        <destination name="MockSink" sink="MockSink" />
                    </destinations>
                </category>
                <category name="MockCategoryMany">
                    <destinations>
                        <destination name="MockSink" sink="MockSink" />
                        <destination name="MockSink2" sink="MockSink2" />
                    </destinations>
                </category>
                <category name="MockCategoryInvalidFormat">
                    <destinations>
                        <destination name="MockSink" sink="MockSink" format="INVALID" />
                    </destinations>
                </category>
                <category name="CustomMessageCategory">
                    <destinations>
                        <destination name="CustomLogEntrySink" sink="CustomLogEntrySink" />
                    </destinations>
                </category>
                <category name="MixedCategory">
                    <destinations>
                        <destination name="MockSink" sink="MockSink" />
                        <destination name="CustomLogEntrySink" sink="CustomLogEntrySink" />
                    </destinations>
                </category>
                <category name="MsmqCategory">
                    <destinations>
                        <destination name="MsmqSink" sink="MsmqSink" />
                    </destinations>
                </category>
                <category name="LoggingDbCategory">
                    <destinations>
                        <destination name="DatabaseSink2" sink="DatabaseSink2" />
                    </destinations>
                </category>
                <category name="LoggingDefaultDatabaseCategory">
                    <destinations>
                        <destination name="DatabaseSink" sink="DatabaseSink" />
                    </destinations>
                </category>
                <category name="AppError">
                    <destinations>
                        <destination name="MockSink" sink="MockSink" />
                    </destinations>
                </category>
                <category name="AppTest">
                    <destinations>
                        <destination name="ApplicationLogSink" sink="ApplicationLogSink" />
                    </destinations>
                </category>
                <category name="Trace">
                    <destinations>
                        <destination name="MockSink" sink="MockSink" />
                        <destination name="DatabaseSink" sink="DatabaseSink" />
                    </destinations>
                </category>
            </categories>
        </enterpriseLibrary.loggingDistributorSettings>
    </xmlSerializerSection>
</loggingDistributorConfiguration>