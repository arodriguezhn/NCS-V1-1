using System.Resources;
// WARNING:
// This file generated by the Microsoft DataWarehouse String Resource Tool 1.13.5000.0
// from information in SR.strings.   
// DO NO MODIFY THIS FILE'S CONTENTS, THEY WILL BE OVERWRITTEN
//

namespace Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore
{
    internal class SR
    {
        public static string FileOpenError(string filename, string description)
        {
            return Keys.GetString(Keys.FileOpenError, filename, description);
        }

        public static string SecurityCacheConfigDataNull
        {
            get { return Keys.GetString(Keys.SecurityCacheConfigDataNull); }
        }

        public static string SecurityCacheConfigDataInvalid
        {
            get { return Keys.GetString(Keys.SecurityCacheConfigDataInvalid); }
        }

        public static string ExceptionRangeSlidingExpiration
        {
            get { return Keys.GetString(Keys.ExceptionRangeSlidingExpiration); }
        }

        public static string EmptySecurityCacheInstanceNameException
        {
            get { return Keys.GetString(Keys.EmptySecurityCacheInstanceNameException); }
        }

        internal class Keys
        {
            private static ResourceManager resourceManager =
                new ResourceManager("Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.SR", typeof(SR).Module.Assembly);

            public static string GetString(string key)
            {
                return resourceManager.GetString(key, Resources.CultureInfo);
            }

            public static string GetString(string key, params object[] args)
            {
                string msg = resourceManager.GetString(key, Resources.CultureInfo);
                msg = string.Format(msg, args);
                return msg;
            }

            public const string FileOpenError = "FileOpenError";
            public const string SecurityCacheConfigDataNull = "SecurityCacheConfigDataNull";
            public const string SecurityCacheConfigDataInvalid = "SecurityCacheConfigDataInvalid";
            public const string ExceptionRangeSlidingExpiration = "ExceptionRangeSlidingExpiration";
            public const string EmptySecurityCacheInstanceNameException = "EmptySecurityCacheInstanceNameException";
        }

    }
}