// WARNING:
// This file generated by the Microsoft DataWarehouse String Resource Tool 1.13.5000.0
// from information in SR.strings.   
// DO NO MODIFY THIS FILE'S CONTENTS, THEY WILL BE OVERWRITTEN
//
namespace Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design
{
	using System;
	using System.Resources;
	using System.Globalization;

	internal class SR
	{
		public static string GenericCreateStatusText (string name)
		{
			return Keys.GetString( Keys.GenericCreateStatusText, name );
		}
		public static string AuthenticationProviderCollectionNodeName
		{
			get { return Keys.GetString( Keys.AuthenticationProviderCollectionNodeName ); }
		}
		public static string AuthenticationProviderCollectionNodeCommandName
		{
			get { return Keys.GetString( Keys.AuthenticationProviderCollectionNodeCommandName ); }
		}
		public static string AuthenticationProviderNodeName
		{
			get { return Keys.GetString( Keys.AuthenticationProviderNodeName ); }
		}
		public static string CustomAuthenticationProviderCommandName
		{
			get { return Keys.GetString( Keys.CustomAuthenticationProviderCommandName ); }
		}
		public static string AuthorizationProviderCollectionNodeName
		{
			get { return Keys.GetString( Keys.AuthorizationProviderCollectionNodeName ); }
		}
		public static string AuthorizationProviderCollectionNodeCommandName
		{
			get { return Keys.GetString( Keys.AuthorizationProviderCollectionNodeCommandName ); }
		}
		public static string AuthorizationProviderNodeName
		{
			get { return Keys.GetString( Keys.AuthorizationProviderNodeName ); }
		}
		public static string CustomAuthorizationProviderCommandName
		{
			get { return Keys.GetString( Keys.CustomAuthorizationProviderCommandName ); }
		}
		public static string RolesProviderCollectionNodeName
		{
			get { return Keys.GetString( Keys.RolesProviderCollectionNodeName ); }
		}
		public static string RolesProviderCollectionNodeCommandName
		{
			get { return Keys.GetString( Keys.RolesProviderCollectionNodeCommandName ); }
		}
		public static string RolesProviderNodeName
		{
			get { return Keys.GetString( Keys.RolesProviderNodeName ); }
		}
		public static string CustomRolesProviderCommandName
		{
			get { return Keys.GetString( Keys.CustomRolesProviderCommandName ); }
		}
		public static string ProfileProviderCollectionNodeName
		{
			get { return Keys.GetString( Keys.ProfileProviderCollectionNodeName ); }
		}
		public static string ProfileProviderCollectionNodeCommandName
		{
			get { return Keys.GetString( Keys.ProfileProviderCollectionNodeCommandName ); }
		}
		public static string ProfileProviderNodeName
		{
			get { return Keys.GetString( Keys.ProfileProviderNodeName ); }
		}
		public static string CustomProfileProviderCommandName
		{
			get { return Keys.GetString( Keys.CustomProfileProviderCommandName ); }
		}
		public static string AddConfigurationSectionCommandName
		{
			get { return Keys.GetString( Keys.AddConfigurationSectionCommandName ); }
		}
		public static string SecuritySettingsNodeName
		{
			get { return Keys.GetString( Keys.SecuritySettingsNodeName ); }
		}
		public static string SecuritySettingsNodeCommandName
		{
			get { return Keys.GetString( Keys.SecuritySettingsNodeCommandName ); }
		}
		public static string SecurityCacheNodeDefaultName
		{
			get { return Keys.GetString( Keys.SecurityCacheNodeDefaultName ); }
		}
		public static string SecurityCacheNodeCommandName
		{
			get { return Keys.GetString( Keys.SecurityCacheNodeCommandName ); }
		}
		public static string CustomSecurityCacheNodeCommandName
		{
			get { return Keys.GetString( Keys.CustomSecurityCacheNodeCommandName ); }
		}
		public static string CustomSecurityCacheNodeDefaultName
		{
			get { return Keys.GetString( Keys.CustomSecurityCacheNodeDefaultName ); }
		}
		public static string SecurityCacheCollectionNodeCommandName
		{
			get { return Keys.GetString( Keys.SecurityCacheCollectionNodeCommandName ); }
		}
		public static string AuthorizationRuleProviderName
		{
			get { return Keys.GetString( Keys.AuthorizationRuleProviderName ); }
		}
		public static string AuthorizationRuleProviderCommandName
		{
			get { return Keys.GetString( Keys.AuthorizationRuleProviderCommandName ); }
		}
		public static string AuthorizationRuleNodeName
		{
			get { return Keys.GetString( Keys.AuthorizationRuleNodeName ); }
		}
		public static string AuthorizationRuleCommandName
		{
			get { return Keys.GetString( Keys.AuthorizationRuleCommandName ); }
		}
		public static string NotOperatorNodeName
		{
			get { return Keys.GetString( Keys.NotOperatorNodeName ); }
		}
		public static string NotOperatorNodeCommandName
		{
			get { return Keys.GetString( Keys.NotOperatorNodeCommandName ); }
		}
		public static string BooleanExpressionNodeName
		{
			get { return Keys.GetString( Keys.BooleanExpressionNodeName ); }
		}
		public static string IdentityExpressionCommandName
		{
			get { return Keys.GetString( Keys.IdentityExpressionCommandName ); }
		}
		public static string IdentityExpressionNodeName
		{
			get { return Keys.GetString( Keys.IdentityExpressionNodeName ); }
		}
		public static string AnyIdentityExpressionNodeName
		{
			get { return Keys.GetString( Keys.AnyIdentityExpressionNodeName ); }
		}
		public static string AnyIdentityExpressionNodeCommandName
		{
			get { return Keys.GetString( Keys.AnyIdentityExpressionNodeCommandName ); }
		}
		public static string AnonymousIdentityExpressionNodeName
		{
			get { return Keys.GetString( Keys.AnonymousIdentityExpressionNodeName ); }
		}
		public static string AnonymousIdentityExpressionNodeCommandName
		{
			get { return Keys.GetString( Keys.AnonymousIdentityExpressionNodeCommandName ); }
		}
		public static string OrOperatorNodeName
		{
			get { return Keys.GetString( Keys.OrOperatorNodeName ); }
		}
		public static string OrOperatorNodeCommandName
		{
			get { return Keys.GetString( Keys.OrOperatorNodeCommandName ); }
		}
		public static string AndOperatorNodeName
		{
			get { return Keys.GetString( Keys.AndOperatorNodeName ); }
		}
		public static string AndOperatorNodeCommandName
		{
			get { return Keys.GetString( Keys.AndOperatorNodeCommandName ); }
		}
		public static string RoleExpressionNodeName
		{
			get { return Keys.GetString( Keys.RoleExpressionNodeName ); }
		}
		public static string RoleExpressionNodeCommandName
		{
			get { return Keys.GetString( Keys.RoleExpressionNodeCommandName ); }
		}
		public static string DefaultProviderDescription
		{
			get { return Keys.GetString( Keys.DefaultProviderDescription ); }
		}
		public static string ProviderTypeNameDescription
		{
			get { return Keys.GetString( Keys.ProviderTypeNameDescription ); }
		}
		public static string ParseSucceededMessageBox
		{
			get { return Keys.GetString( Keys.ParseSucceededMessageBox ); }
		}
		public static string ParseSucceededMessageBoxCaption
		{
			get { return Keys.GetString( Keys.ParseSucceededMessageBoxCaption ); }
		}
		public static string ParseFailedMessage (string message)
		{
			return Keys.GetString( Keys.ParseFailedMessage, message );
		}
		public static string ParseFailedCaption
		{
			get { return Keys.GetString( Keys.ParseFailedCaption ); }
		}
		public static string EvaluateMessageBox (bool result)
		{
			return Keys.GetString( Keys.EvaluateMessageBox, result );
		}
		public static string EvaluateMessageBoxCaption
		{
			get { return Keys.GetString( Keys.EvaluateMessageBoxCaption ); }
		}
		public static string UnableToParseDialogMessage
		{
			get { return Keys.GetString( Keys.UnableToParseDialogMessage ); }
		}
		public static string UnableToParseDialogCaption
		{
			get { return Keys.GetString( Keys.UnableToParseDialogCaption ); }
		}
		public static string AccessGranted
		{
			get { return Keys.GetString( Keys.AccessGranted ); }
		}
		public static string AccessDenied
		{
			get { return Keys.GetString( Keys.AccessDenied ); }
		}
		public static string RuleNameRequired
		{
			get { return Keys.GetString( Keys.RuleNameRequired ); }
		}
		public static string CategoryGeneral
		{
			get { return Keys.GetString( Keys.CategoryGeneral ); }
		}

		internal class Keys 
		{
			static ResourceManager resourceManager = 
				new ResourceManager("Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.SR", typeof(Microsoft.Practices.EnterpriseLibrary.Security.Configuration.Design.SR).Module.Assembly );

			public static string GetString( string key )
			{
				return resourceManager.GetString( key, Resources.CultureInfo );
			}
			public static string GetString( string key, params object[] args )
			{
				string msg = resourceManager.GetString( key, Resources.CultureInfo );
				msg = string.Format( msg, args );
				return msg;
			}

			public const string GenericCreateStatusText = "GenericCreateStatusText";
			public const string AuthenticationProviderCollectionNodeName = "AuthenticationProviderCollectionNodeName";
			public const string AuthenticationProviderCollectionNodeCommandName = "AuthenticationProviderCollectionNodeCommandName";
			public const string AuthenticationProviderNodeName = "AuthenticationProviderNodeName";
			public const string CustomAuthenticationProviderCommandName = "CustomAuthenticationProviderCommandName";
			public const string AuthorizationProviderCollectionNodeName = "AuthorizationProviderCollectionNodeName";
			public const string AuthorizationProviderCollectionNodeCommandName = "AuthorizationProviderCollectionNodeCommandName";
			public const string AuthorizationProviderNodeName = "AuthorizationProviderNodeName";
			public const string CustomAuthorizationProviderCommandName = "CustomAuthorizationProviderCommandName";
			public const string RolesProviderCollectionNodeName = "RolesProviderCollectionNodeName";
			public const string RolesProviderCollectionNodeCommandName = "RolesProviderCollectionNodeCommandName";
			public const string RolesProviderNodeName = "RolesProviderNodeName";
			public const string CustomRolesProviderCommandName = "CustomRolesProviderCommandName";
			public const string ProfileProviderCollectionNodeName = "ProfileProviderCollectionNodeName";
			public const string ProfileProviderCollectionNodeCommandName = "ProfileProviderCollectionNodeCommandName";
			public const string ProfileProviderNodeName = "ProfileProviderNodeName";
			public const string CustomProfileProviderCommandName = "CustomProfileProviderCommandName";
			public const string AddConfigurationSectionCommandName = "AddConfigurationSectionCommandName";
			public const string SecuritySettingsNodeName = "SecuritySettingsNodeName";
			public const string SecuritySettingsNodeCommandName = "SecuritySettingsNodeCommandName";
			public const string SecurityCacheNodeDefaultName = "SecurityCacheNodeDefaultName";
			public const string SecurityCacheNodeCommandName = "SecurityCacheNodeCommandName";
			public const string CustomSecurityCacheNodeCommandName = "CustomSecurityCacheNodeCommandName";
			public const string CustomSecurityCacheNodeDefaultName = "CustomSecurityCacheNodeDefaultName";
			public const string SecurityCacheCollectionNodeCommandName = "SecurityCacheCollectionNodeCommandName";
			public const string AuthorizationRuleProviderName = "AuthorizationRuleProviderName";
			public const string AuthorizationRuleProviderCommandName = "AuthorizationRuleProviderCommandName";
			public const string AuthorizationRuleNodeName = "AuthorizationRuleNodeName";
			public const string AuthorizationRuleCommandName = "AuthorizationRuleCommandName";
			public const string NotOperatorNodeName = "NotOperatorNodeName";
			public const string NotOperatorNodeCommandName = "NotOperatorNodeCommandName";
			public const string BooleanExpressionNodeName = "BooleanExpressionNodeName";
			public const string IdentityExpressionCommandName = "IdentityExpressionCommandName";
			public const string IdentityExpressionNodeName = "IdentityExpressionNodeName";
			public const string AnyIdentityExpressionNodeName = "AnyIdentityExpressionNodeName";
			public const string AnyIdentityExpressionNodeCommandName = "AnyIdentityExpressionNodeCommandName";
			public const string AnonymousIdentityExpressionNodeName = "AnonymousIdentityExpressionNodeName";
			public const string AnonymousIdentityExpressionNodeCommandName = "AnonymousIdentityExpressionNodeCommandName";
			public const string OrOperatorNodeName = "OrOperatorNodeName";
			public const string OrOperatorNodeCommandName = "OrOperatorNodeCommandName";
			public const string AndOperatorNodeName = "AndOperatorNodeName";
			public const string AndOperatorNodeCommandName = "AndOperatorNodeCommandName";
			public const string RoleExpressionNodeName = "RoleExpressionNodeName";
			public const string RoleExpressionNodeCommandName = "RoleExpressionNodeCommandName";
			public const string DefaultProviderDescription = "DefaultProviderDescription";
			public const string ProviderTypeNameDescription = "ProviderTypeNameDescription";
			public const string ParseSucceededMessageBox = "ParseSucceededMessageBox";
			public const string ParseSucceededMessageBoxCaption = "ParseSucceededMessageBoxCaption";
			public const string ParseFailedMessage = "ParseFailedMessage";
			public const string ParseFailedCaption = "ParseFailedCaption";
			public const string EvaluateMessageBox = "EvaluateMessageBox";
			public const string EvaluateMessageBoxCaption = "EvaluateMessageBoxCaption";
			public const string UnableToParseDialogMessage = "UnableToParseDialogMessage";
			public const string UnableToParseDialogCaption = "UnableToParseDialogCaption";
			public const string AccessGranted = "AccessGranted";
			public const string AccessDenied = "AccessDenied";
			public const string RuleNameRequired = "RuleNameRequired";
			public const string CategoryGeneral = "CategoryGeneral";
		}


	}
}
