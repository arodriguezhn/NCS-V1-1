<?xml version="1.0" encoding="utf-8"?>
<root>
  <xs:schema id="root" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xs:element name="root" msdata:IsDataSet="true">
      <xs:complexType>
        <xs:choice maxOccurs="unbounded">
          <xs:element name="data">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="value" type="xs:string" minOccurs="0" msdata:Ordinal="1" />
                <xs:element name="comment" type="xs:string" minOccurs="0" msdata:Ordinal="2" />
              </xs:sequence>
              <xs:attribute name="name" type="xs:string" />
              <xs:attribute name="type" type="xs:string" />
              <xs:attribute name="mimetype" type="xs:string" />
            </xs:complexType>
          </xs:element>
          <xs:element name="resheader">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="value" type="xs:string" minOccurs="0" msdata:Ordinal="1" />
              </xs:sequence>
              <xs:attribute name="name" type="xs:string" use="required" />
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:complexType>
    </xs:element>
  </xs:schema>
  <data name="CryptographyNodeName">
    <value>Cryptography Application Block</value>
  </data>
  <data name="CryptographySectionCommandName">
    <value>Cryptography Application Block</value>
  </data>
  <data name="HashProviderCollectionNodeName">
    <value>Hash Providers</value>
  </data>
  <data name="HashProviderCollectionCommandName">
    <value>Hash Providers</value>
  </data>
  <data name="SymmetricProviderCollectionNodeName">
    <value>Symmetric Providers</value>
  </data>
  <data name="SymmetricProviderCollectionCommandName">
    <value>Symmetric Providers</value>
  </data>
  <data name="HashProviderNodeName">
    <value>Hash Provider</value>
  </data>
  <data name="KeyedHashProviderNodeName">
    <value>Keyed Hash Provider</value>
  </data>
  <data name="CustomHashProviderNodeName">
    <value>Custom Hash Provider</value>
  </data>
  <data name="HMACSHA1HashProviderNodeName">
    <value>HMACSHA1 Hash Provider</value>
  </data>
  <data name="SymmetricCryptoProviderNodeName">
    <value>Symmetric Cryptography Provider</value>
  </data>
  <data name="CustomSymmetricCryptoProviderNodeName">
    <value>Custom Symmetric Cryptography Provider</value>
  </data>
  <data name="SymmetricAlgorithmProviderNodeName">
    <value>Symmetric Algorithm Provider</value>
  </data>
  <data name="DpapiSymmetricCryptoProviderNodeName">
    <value>DPAPI Symmetric Cryptography Provider</value>
  </data>
  <data name="HashAlgorithmProviderNodeName">
    <value>HashAlgorithm Provider</value>
  </data>
  <data name="HashProviderTypeNameDescription">
    <value>Any hash provider that implements IHashProvider.</value>
  </data>
  <data name="CustomHashProviderNodeExtensionsDescription">
    <value>Custom configuration extensions if applicable for this type.</value>
  </data>
  <data name="CustomSymmetricCryptoProviderExtensionsDescription">
    <value>Custom configuration extensions if applicable for this type.</value>
  </data>
  <data name="CustomSymmetricCryptoProviderTypeNameDescription">
    <value>Any symmetric cryptography provider that implements ISymmetricCryptoProvider.</value>
  </data>
  <data name="DpapiSymmetricCryptoProviderNodeModeDescription">
    <value>The storage mode for DPAPI.  See the DpapiStorageMode enum for more information.</value>
  </data>
  <data name="KeyManagerEditorRequiresKeyInfoProperty">
    <value>Invalid property type.  You may only use the KeyManagerEditor on properties of the type KeyInfo.</value>
  </data>
  <data name="KeyManagerUIKeyBoxEncrypted">
    <value>The key is hidden for security purposes.  If you would like a new key you must create a new cryptography instance.  If you must replace the key for this instance, delete this instance and create a new instance with the same name.</value>
  </data>
  <data name="Bit">
    <value>bit</value>
  </data>
  <data name="KeyManagerUICurrentKeySizeCaption">
    <value>Key Size:</value>
  </data>
  <data name="KeyManagerUIInvalidKey">
    <value>Invalid key</value>
  </data>
  <data name="CategoryGeneral">
    <value>General</value>
  </data>
  <data name="ExportFileFilter">
    <value>Key export files (*.txt)|*.txt|All files (*.*)|*.*</value>
  </data>
  <data name="ExportDialogTitle">
    <value>Export Key As</value>
  </data>
  <data name="ExportDialogErrorTitle">
    <value>Error</value>
  </data>
  <data name="ExportPasswordsDoNotMatch">
    <value>Passwords do not match.</value>
  </data>
  <data name="ExportPasswordMinLength">
    <value>Password must be at least {0} characters.</value>
    <comment>.
 Parameters: 0 - min (string) </comment>
  </data>
  <data name="ExportSuccessfulTitle">
    <value>Export</value>
  </data>
  <data name="ExportSuccessful">
    <value>Key has been exported successfully.</value>
  </data>
  <data name="ExportDirectoryInvalid">
    <value>Directory is invalid.</value>
  </data>
  <data name="ImportDialogErrorTitle">
    <value>Error</value>
  </data>
  <data name="ImportSourceFileInvalid">
    <value>File does not exist.</value>
  </data>
  <data name="ImportDecryptError">
    <value>Unable to decrypt key.  Password may be incorrect.</value>
  </data>
  <data name="ImportDecryptFormatError">
    <value>Unable to read key file. File format may be invalid.</value>
  </data>
  <data name="ImportSuccessfulTitle">
    <value>Import</value>
  </data>
  <data name="ImportSuccessful">
    <value>Key has been imported successfully.</value>
  </data>
  <data name="ImportPasswordInvalidTitle">
    <value>Error</value>
  </data>
  <data name="ImportPasswordInvalid">
    <value>Password is invalid.</value>
  </data>
  <data name="DecryptPasswordCheckFailure">
    <value>Password is not correct.</value>
  </data>
  <data name="InvalidExportDestination">
    <value>Invalid export destination.</value>
  </data>
  <data name="InvalidImportSource">
    <value>Invalid source file.</value>
  </data>
  <data name="MissingPassword">
    <value>Key file is password protected and no password was provided.</value>
  </data>
  <data name="DPAPIModeRequiredErrorMessage">
    <value>DPAPI mode is required.</value>
  </data>
  <data name="GenericCreateStatusText">
    <value>Create a new {0}</value>
    <comment>.
 Parameters: 0 - name (string) </comment>
  </data>
  <data name="OverwriteExportFileMessage">
    <value>The file {0} is read-only.  Would you like to overwrite the file?</value>
    <comment>.
 Parameters: 0 - file (string) </comment>
  </data>
  <data name="OverwriteExportFileCaption">
    <value>Export Key</value>
  </data>
  <resheader name="ResMimeType">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="Version">
    <value>1.0.0.0</value>
  </resheader>
  <resheader name="Reader">
    <value>System.Resources.ResXResourceReader</value>
  </resheader>
  <resheader name="Writer">
    <value>System.Resources.ResXResourceWriter</value>
  </resheader>
</root>