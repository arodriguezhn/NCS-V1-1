// WARNING:
// This file generated by the Microsoft DataWarehouse String Resource Tool 1.13.5000.0
// from information in SR.strings.   
// DO NO MODIFY THIS FILE'S CONTENTS, THEY WILL BE OVERWRITTEN
//
namespace Microsoft.Practices.EnterpriseLibrary.Security
{
	using System;
	using System.Resources;
	using System.Globalization;

	internal class SR
	{
		public static string AndOperatorString (string left, string right)
		{
			return Keys.GetString( Keys.AndOperatorString, left, right );
		}
		public static string OrOperatorString (string left, string right)
		{
			return Keys.GetString( Keys.OrOperatorString, left, right );
		}
		public static string PlaceHolderString
		{
			get { return Keys.GetString( Keys.PlaceHolderString ); }
		}
		public static string NotOperatorString (string expression)
		{
			return Keys.GetString( Keys.NotOperatorString, expression );
		}
		public static string IdentityExpressionString (string name)
		{
			return Keys.GetString( Keys.IdentityExpressionString, name );
		}
		public static string RoleExpressionString (string name)
		{
			return Keys.GetString( Keys.RoleExpressionString, name );
		}
		public static string AnyIdentityExpressionString
		{
			get { return Keys.GetString( Keys.AnyIdentityExpressionString ); }
		}
		public static string AnonymousIdentityExpressionString
		{
			get { return Keys.GetString( Keys.AnonymousIdentityExpressionString ); }
		}
		public static string Or
		{
			get { return Keys.GetString( Keys.Or ); }
		}
		public static string Authorization
		{
			get { return Keys.GetString( Keys.Authorization ); }
		}
		public static string Authentication
		{
			get { return Keys.GetString( Keys.Authentication ); }
		}
		public static string Roles
		{
			get { return Keys.GetString( Keys.Roles ); }
		}
		public static string Profile
		{
			get { return Keys.GetString( Keys.Profile ); }
		}
		public static string SecurityCache
		{
			get { return Keys.GetString( Keys.SecurityCache ); }
		}
		public static string InstrumentationEventSource
		{
			get { return Keys.GetString( Keys.InstrumentationEventSource ); }
		}
		public static string InstrumentationCounterCategory
		{
			get { return Keys.GetString( Keys.InstrumentationCounterCategory ); }
		}
		public static string InstrumentationCounterCategoryHelp
		{
			get { return Keys.GetString( Keys.InstrumentationCounterCategoryHelp ); }
		}
		public static string PerfCounterNumAuthenticationChecksSecMsg
		{
			get { return Keys.GetString( Keys.PerfCounterNumAuthenticationChecksSecMsg ); }
		}
		public static string PerfCounterNumAuthenticationFailuresSecMsg
		{
			get { return Keys.GetString( Keys.PerfCounterNumAuthenticationFailuresSecMsg ); }
		}
		public static string PerfCounterNumAuthorizationChecksSecMsg
		{
			get { return Keys.GetString( Keys.PerfCounterNumAuthorizationChecksSecMsg ); }
		}
		public static string PerfCounterNumAuthorizationFailuresSecMsg
		{
			get { return Keys.GetString( Keys.PerfCounterNumAuthorizationFailuresSecMsg ); }
		}
		public static string PerfCounterNumProfileLoadsSecMsg
		{
			get { return Keys.GetString( Keys.PerfCounterNumProfileLoadsSecMsg ); }
		}
		public static string PerfCounterNumProfileSavesSecMsg
		{
			get { return Keys.GetString( Keys.PerfCounterNumProfileSavesSecMsg ); }
		}
		public static string PerfCounterNumRoleLoadsSecMsg
		{
			get { return Keys.GetString( Keys.PerfCounterNumRoleLoadsSecMsg ); }
		}
		public static string PerfCounterNumCacheHitsSecMsg
		{
			get { return Keys.GetString( Keys.PerfCounterNumCacheHitsSecMsg ); }
		}
		public static string PerfCounterNumCacheMissesSecMsg
		{
			get { return Keys.GetString( Keys.PerfCounterNumCacheMissesSecMsg ); }
		}
		public static string PerfCounterRatioCacheHitsMsg
		{
			get { return Keys.GetString( Keys.PerfCounterRatioCacheHitsMsg ); }
		}
		public static string PerfCounterCacheAccessAttemptsMsg
		{
			get { return Keys.GetString( Keys.PerfCounterCacheAccessAttemptsMsg ); }
		}
		public static string AuthorizationRuleNotFoundMsg (string ruleName)
		{
			return Keys.GetString( Keys.AuthorizationRuleNotFoundMsg, ruleName );
		}
		public static string NotFoundExceptionMessage (string providerType, string providerName)
		{
			return Keys.GetString( Keys.NotFoundExceptionMessage, providerType, providerName );
		}
		public static string InvalidArgument (string argumentName, string typeName)
		{
			return Keys.GetString( Keys.InvalidArgument, argumentName, typeName );
		}
		public static string IdentityIsNull
		{
			get { return Keys.GetString( Keys.IdentityIsNull ); }
		}
		public static string IdentityInvalid
		{
			get { return Keys.GetString( Keys.IdentityInvalid ); }
		}
		public static string UnexpectedTokenMessage (string expected, string actual, int index)
		{
			return Keys.GetString( Keys.UnexpectedTokenMessage, expected, actual, index );
		}
		public static string ExceptionSecurityCacheProviderNotFound (string name)
		{
			return Keys.GetString( Keys.ExceptionSecurityCacheProviderNotFound, name );
		}
		public static string ExceptionRolesProviderNotFound (string name)
		{
			return Keys.GetString( Keys.ExceptionRolesProviderNotFound, name );
		}
		public static string ExceptionProfileProviderNotFound (string name)
		{
			return Keys.GetString( Keys.ExceptionProfileProviderNotFound, name );
		}
		public static string ExceptionAuthorizationProviderNotFound (string name)
		{
			return Keys.GetString( Keys.ExceptionAuthorizationProviderNotFound, name );
		}
		public static string ExceptionAuthenticationProviderNotFound (string name)
		{
			return Keys.GetString( Keys.ExceptionAuthenticationProviderNotFound, name );
		}

		internal class Keys 
		{
			static ResourceManager resourceManager = 
				new ResourceManager("Microsoft.Practices.EnterpriseLibrary.Security.SR", typeof(Microsoft.Practices.EnterpriseLibrary.Security.SR).Module.Assembly );

			public static string GetString( string key )
			{
				return resourceManager.GetString( key, Resources.CultureInfo );
			}
			public static string GetString( string key, params object[] args )
			{
				string msg = resourceManager.GetString( key, Resources.CultureInfo );
				msg = string.Format( msg, args );
				return msg;
			}

			public const string AndOperatorString = "AndOperatorString";
			public const string OrOperatorString = "OrOperatorString";
			public const string PlaceHolderString = "PlaceHolderString";
			public const string NotOperatorString = "NotOperatorString";
			public const string IdentityExpressionString = "IdentityExpressionString";
			public const string RoleExpressionString = "RoleExpressionString";
			public const string AnyIdentityExpressionString = "AnyIdentityExpressionString";
			public const string AnonymousIdentityExpressionString = "AnonymousIdentityExpressionString";
			public const string Or = "Or";
			public const string Authorization = "Authorization";
			public const string Authentication = "Authentication";
			public const string Roles = "Roles";
			public const string Profile = "Profile";
			public const string SecurityCache = "SecurityCache";
			public const string InstrumentationEventSource = "InstrumentationEventSource";
			public const string InstrumentationCounterCategory = "InstrumentationCounterCategory";
			public const string InstrumentationCounterCategoryHelp = "InstrumentationCounterCategoryHelp";
			public const string PerfCounterNumAuthenticationChecksSecMsg = "PerfCounterNumAuthenticationChecksSecMsg";
			public const string PerfCounterNumAuthenticationFailuresSecMsg = "PerfCounterNumAuthenticationFailuresSecMsg";
			public const string PerfCounterNumAuthorizationChecksSecMsg = "PerfCounterNumAuthorizationChecksSecMsg";
			public const string PerfCounterNumAuthorizationFailuresSecMsg = "PerfCounterNumAuthorizationFailuresSecMsg";
			public const string PerfCounterNumProfileLoadsSecMsg = "PerfCounterNumProfileLoadsSecMsg";
			public const string PerfCounterNumProfileSavesSecMsg = "PerfCounterNumProfileSavesSecMsg";
			public const string PerfCounterNumRoleLoadsSecMsg = "PerfCounterNumRoleLoadsSecMsg";
			public const string PerfCounterNumCacheHitsSecMsg = "PerfCounterNumCacheHitsSecMsg";
			public const string PerfCounterNumCacheMissesSecMsg = "PerfCounterNumCacheMissesSecMsg";
			public const string PerfCounterRatioCacheHitsMsg = "PerfCounterRatioCacheHitsMsg";
			public const string PerfCounterCacheAccessAttemptsMsg = "PerfCounterCacheAccessAttemptsMsg";
			public const string AuthorizationRuleNotFoundMsg = "AuthorizationRuleNotFoundMsg";
			public const string NotFoundExceptionMessage = "NotFoundExceptionMessage";
			public const string InvalidArgument = "InvalidArgument";
			public const string IdentityIsNull = "IdentityIsNull";
			public const string IdentityInvalid = "IdentityInvalid";
			public const string UnexpectedTokenMessage = "UnexpectedTokenMessage";
			public const string ExceptionSecurityCacheProviderNotFound = "ExceptionSecurityCacheProviderNotFound";
			public const string ExceptionRolesProviderNotFound = "ExceptionRolesProviderNotFound";
			public const string ExceptionProfileProviderNotFound = "ExceptionProfileProviderNotFound";
			public const string ExceptionAuthorizationProviderNotFound = "ExceptionAuthorizationProviderNotFound";
			public const string ExceptionAuthenticationProviderNotFound = "ExceptionAuthenticationProviderNotFound";
		}


	}
}
