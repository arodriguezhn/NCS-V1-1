// WARNING:
// This file generated by the Microsoft DataWarehouse String Resource Tool 1.13.5000.0
// from information in SR.strings.   
// DO NO MODIFY THIS FILE'S CONTENTS, THEY WILL BE OVERWRITTEN
//
namespace Microsoft.Practices.EnterpriseLibrary.Tools.ConfigurationConsole
{
	using System;
	using System.Resources;
	using System.Globalization;

	internal class SR
	{
		public static CultureInfo Culture
		{
			get
			{
				return Keys.Culture;
			}
			set
			{
				Keys.Culture = value;
			}
		}

		public static string DefaultSolutionNodeName
		{
			get { return Keys.GetString( Keys.DefaultSolutionNodeName ); }
		}
		public static string DefaultStatusBarText
		{
			get { return Keys.GetString( Keys.DefaultStatusBarText ); }
		}
		public static string NewApplicationStatusBarText
		{
			get { return Keys.GetString( Keys.NewApplicationStatusBarText ); }
		}
		public static string OpenApplicationStatusBarText
		{
			get { return Keys.GetString( Keys.OpenApplicationStatusBarText ); }
		}
		public static string SaveApplicationStatusBarText
		{
			get { return Keys.GetString( Keys.SaveApplicationStatusBarText ); }
		}
		public static string SaveAllStatusBarText
		{
			get { return Keys.GetString( Keys.SaveAllStatusBarText ); }
		}
		public static string Close
		{
			get { return Keys.GetString( Keys.Close ); }
		}
		public static string SaveConfigurationCaption
		{
			get { return Keys.GetString( Keys.SaveConfigurationCaption ); }
		}
		public static string SaveConfigurationMessage
		{
			get { return Keys.GetString( Keys.SaveConfigurationMessage ); }
		}
		public static string ConfirmNodeRemoveMessage
		{
			get { return Keys.GetString( Keys.ConfirmNodeRemoveMessage ); }
		}
		public static string ConfirmNodeRemoveCaption
		{
			get { return Keys.GetString( Keys.ConfirmNodeRemoveCaption ); }
		}
		public static string OpenApplicationCaption
		{
			get { return Keys.GetString( Keys.OpenApplicationCaption ); }
		}
		public static string NewApplicationFormText
		{
			get { return Keys.GetString( Keys.NewApplicationFormText ); }
		}
		public static string OpenApplicationFormText
		{
			get { return Keys.GetString( Keys.OpenApplicationFormText ); }
		}
		public static string SaveApplicationAsFormText
		{
			get { return Keys.GetString( Keys.SaveApplicationAsFormText ); }
		}
		public static string CopyErrorsMenuItemText
		{
			get { return Keys.GetString( Keys.CopyErrorsMenuItemText ); }
		}
		public static string ValidationFailedCaption
		{
			get { return Keys.GetString( Keys.ValidationFailedCaption ); }
		}
		public static string ValidationFailedMessage (int count)
		{
			return Keys.GetString( Keys.ValidationFailedMessage, count );
		}
		public static string OverwriteFilesCaption
		{
			get { return Keys.GetString( Keys.OverwriteFilesCaption ); }
		}
		public static string OverwriteFilesMessage
		{
			get { return Keys.GetString( Keys.OverwriteFilesMessage ); }
		}
		public static string UnhandledExceptionFormText
		{
			get { return Keys.GetString( Keys.UnhandledExceptionFormText ); }
		}
		public static string NodeLabelEditCaption
		{
			get { return Keys.GetString( Keys.NodeLabelEditCaption ); }
		}
		public static string NodeLabelEditText
		{
			get { return Keys.GetString( Keys.NodeLabelEditText ); }
		}
		public static string NodeLabelEditFailedText
		{
			get { return Keys.GetString( Keys.NodeLabelEditFailedText ); }
		}
		public static string CreateDirectoryText (string directory)
		{
			return Keys.GetString( Keys.CreateDirectoryText, directory );
		}
		public static string CreateDirectoryCaption
		{
			get { return Keys.GetString( Keys.CreateDirectoryCaption ); }
		}
		public static string PathNotRooted
		{
			get { return Keys.GetString( Keys.PathNotRooted ); }
		}
		public static string PathNotRootedCaption
		{
			get { return Keys.GetString( Keys.PathNotRootedCaption ); }
		}
		public static string UnspecifiedDirectory
		{
			get { return Keys.GetString( Keys.UnspecifiedDirectory ); }
		}
		public static string UnspecifiedDirectoryCaption
		{
			get { return Keys.GetString( Keys.UnspecifiedDirectoryCaption ); }
		}
		public static string CreateDirectoryException
		{
			get { return Keys.GetString( Keys.CreateDirectoryException ); }
		}
		public static string CreateDirectoryExceptionCaption
		{
			get { return Keys.GetString( Keys.CreateDirectoryExceptionCaption ); }
		}
		public static string RemoveNodeCommandInterceptorPath
		{
			get { return Keys.GetString( Keys.RemoveNodeCommandInterceptorPath ); }
		}
		public static string ValidateNodeCommandInterceptorPath
		{
			get { return Keys.GetString( Keys.ValidateNodeCommandInterceptorPath ); }
		}
		public static string ValidationSucceeded
		{
			get { return Keys.GetString( Keys.ValidationSucceeded ); }
		}
		public static string SaveApplicationCommandInterceptorPath
		{
			get { return Keys.GetString( Keys.SaveApplicationCommandInterceptorPath ); }
		}
		public static string ValidateSaveApplicationCommandInterceptorPath
		{
			get { return Keys.GetString( Keys.ValidateSaveApplicationCommandInterceptorPath ); }
		}
		public static string OverwriteFileMessage (string fileName)
		{
			return Keys.GetString( Keys.OverwriteFileMessage, fileName );
		}
		public static string OverwriteFileCaption
		{
			get { return Keys.GetString( Keys.OverwriteFileCaption ); }
		}
		public static string SaveWithoutValidatingMessage
		{
			get { return Keys.GetString( Keys.SaveWithoutValidatingMessage ); }
		}
		public static string SaveWithoutValidatingCaption
		{
			get { return Keys.GetString( Keys.SaveWithoutValidatingCaption ); }
		}
		public static string ValidateSaveApplicationCommmandError
		{
			get { return Keys.GetString( Keys.ValidateSaveApplicationCommmandError ); }
		}
		public static string SaveConfigurationQuestionCaption
		{
			get { return Keys.GetString( Keys.SaveConfigurationQuestionCaption ); }
		}
		public static string SaveConfigurationQuestionMessage (string applicationName)
		{
			return Keys.GetString( Keys.SaveConfigurationQuestionMessage, applicationName );
		}
		public static string ConfigurationFileDialogFilter
		{
			get { return Keys.GetString( Keys.ConfigurationFileDialogFilter ); }
		}
		public static string OpenApplicationCommandPath
		{
			get { return Keys.GetString( Keys.OpenApplicationCommandPath ); }
		}
		public static string SaveApplicationDialogText (string name)
		{
			return Keys.GetString( Keys.SaveApplicationDialogText, name );
		}
		public static string SaveApplicationDialogDefaultExt
		{
			get { return Keys.GetString( Keys.SaveApplicationDialogDefaultExt ); }
		}
		public static string OpenApplicationErrorMessageBoxText (string path, string message)
		{
			return Keys.GetString( Keys.OpenApplicationErrorMessageBoxText, path, message );
		}
		public static string OpenApplicationErrorMessageBoxCaption
		{
			get { return Keys.GetString( Keys.OpenApplicationErrorMessageBoxCaption ); }
		}
		public static string SaveApplicationPrompt (string appName)
		{
			return Keys.GetString( Keys.SaveApplicationPrompt, appName );
		}
		public static string SaveAppCaption
		{
			get { return Keys.GetString( Keys.SaveAppCaption ); }
		}
		public static string ErrorApplicationConfigNodeExpected
		{
			get { return Keys.GetString( Keys.ErrorApplicationConfigNodeExpected ); }
		}
		public static string MoveDown
		{
			get { return Keys.GetString( Keys.MoveDown ); }
		}
		public static string MoveUp
		{
			get { return Keys.GetString( Keys.MoveUp ); }
		}
		public static string Rename
		{
			get { return Keys.GetString( Keys.Rename ); }
		}
		public static string SaveAs
		{
			get { return Keys.GetString( Keys.SaveAs ); }
		}
		public static string ExceptionFileInUse (string fileName)
		{
			return Keys.GetString( Keys.ExceptionFileInUse, fileName );
		}
		public static string ExceptionFileInUseCaption
		{
			get { return Keys.GetString( Keys.ExceptionFileInUseCaption ); }
		}
		public static string RemoveNodeMessage
		{
			get { return Keys.GetString( Keys.RemoveNodeMessage ); }
		}
		public static string RemoveNodeCaption
		{
			get { return Keys.GetString( Keys.RemoveNodeCaption ); }
		}
		public static string SaveApplicationsMessage
		{
			get { return Keys.GetString( Keys.SaveApplicationsMessage ); }
		}
		public static string SaveApplicationCaption
		{
			get { return Keys.GetString( Keys.SaveApplicationCaption ); }
		}
		public static string InvalidSaveHierarchyMessage (string name)
		{
			return Keys.GetString( Keys.InvalidSaveHierarchyMessage, name );
		}

		internal class Keys 
		{
			static ResourceManager resourceManager = 
				new ResourceManager("Microsoft.Practices.EnterpriseLibrary.Tools.ConfigurationConsole.SR", typeof(Microsoft.Practices.EnterpriseLibrary.Tools.ConfigurationConsole.SR).Module.Assembly );

			static CultureInfo culture = null;

			public static CultureInfo Culture
			{
				get
				{
					return culture;
				}
				set
				{
					culture = value;
				}
			}

			public static string GetString( string key )
			{
				return resourceManager.GetString( key, culture );
			}
			public static string GetString( string key, params object[] args )
			{
				string msg = resourceManager.GetString( key, culture );
				msg = string.Format( msg, args );
				return msg;
			}

			public const string DefaultSolutionNodeName = "DefaultSolutionNodeName";
			public const string DefaultStatusBarText = "DefaultStatusBarText";
			public const string NewApplicationStatusBarText = "NewApplicationStatusBarText";
			public const string OpenApplicationStatusBarText = "OpenApplicationStatusBarText";
			public const string SaveApplicationStatusBarText = "SaveApplicationStatusBarText";
			public const string SaveAllStatusBarText = "SaveAllStatusBarText";
			public const string Close = "Close";
			public const string SaveConfigurationCaption = "SaveConfigurationCaption";
			public const string SaveConfigurationMessage = "SaveConfigurationMessage";
			public const string ConfirmNodeRemoveMessage = "ConfirmNodeRemoveMessage";
			public const string ConfirmNodeRemoveCaption = "ConfirmNodeRemoveCaption";
			public const string OpenApplicationCaption = "OpenApplicationCaption";
			public const string NewApplicationFormText = "NewApplicationFormText";
			public const string OpenApplicationFormText = "OpenApplicationFormText";
			public const string SaveApplicationAsFormText = "SaveApplicationAsFormText";
			public const string CopyErrorsMenuItemText = "CopyErrorsMenuItemText";
			public const string ValidationFailedCaption = "ValidationFailedCaption";
			public const string ValidationFailedMessage = "ValidationFailedMessage";
			public const string OverwriteFilesCaption = "OverwriteFilesCaption";
			public const string OverwriteFilesMessage = "OverwriteFilesMessage";
			public const string UnhandledExceptionFormText = "UnhandledExceptionFormText";
			public const string NodeLabelEditCaption = "NodeLabelEditCaption";
			public const string NodeLabelEditText = "NodeLabelEditText";
			public const string NodeLabelEditFailedText = "NodeLabelEditFailedText";
			public const string CreateDirectoryText = "CreateDirectoryText";
			public const string CreateDirectoryCaption = "CreateDirectoryCaption";
			public const string PathNotRooted = "PathNotRooted";
			public const string PathNotRootedCaption = "PathNotRootedCaption";
			public const string UnspecifiedDirectory = "UnspecifiedDirectory";
			public const string UnspecifiedDirectoryCaption = "UnspecifiedDirectoryCaption";
			public const string CreateDirectoryException = "CreateDirectoryException";
			public const string CreateDirectoryExceptionCaption = "CreateDirectoryExceptionCaption";
			public const string RemoveNodeCommandInterceptorPath = "RemoveNodeCommandInterceptorPath";
			public const string ValidateNodeCommandInterceptorPath = "ValidateNodeCommandInterceptorPath";
			public const string ValidationSucceeded = "ValidationSucceeded";
			public const string SaveApplicationCommandInterceptorPath = "SaveApplicationCommandInterceptorPath";
			public const string ValidateSaveApplicationCommandInterceptorPath = "ValidateSaveApplicationCommandInterceptorPath";
			public const string OverwriteFileMessage = "OverwriteFileMessage";
			public const string OverwriteFileCaption = "OverwriteFileCaption";
			public const string SaveWithoutValidatingMessage = "SaveWithoutValidatingMessage";
			public const string SaveWithoutValidatingCaption = "SaveWithoutValidatingCaption";
			public const string ValidateSaveApplicationCommmandError = "ValidateSaveApplicationCommmandError";
			public const string SaveConfigurationQuestionCaption = "SaveConfigurationQuestionCaption";
			public const string SaveConfigurationQuestionMessage = "SaveConfigurationQuestionMessage";
			public const string ConfigurationFileDialogFilter = "ConfigurationFileDialogFilter";
			public const string OpenApplicationCommandPath = "OpenApplicationCommandPath";
			public const string SaveApplicationDialogText = "SaveApplicationDialogText";
			public const string SaveApplicationDialogDefaultExt = "SaveApplicationDialogDefaultExt";
			public const string OpenApplicationErrorMessageBoxText = "OpenApplicationErrorMessageBoxText";
			public const string OpenApplicationErrorMessageBoxCaption = "OpenApplicationErrorMessageBoxCaption";
			public const string SaveApplicationPrompt = "SaveApplicationPrompt";
			public const string SaveAppCaption = "SaveAppCaption";
			public const string ErrorApplicationConfigNodeExpected = "ErrorApplicationConfigNodeExpected";
			public const string MoveDown = "MoveDown";
			public const string MoveUp = "MoveUp";
			public const string Rename = "Rename";
			public const string SaveAs = "SaveAs";
			public const string ExceptionFileInUse = "ExceptionFileInUse";
			public const string ExceptionFileInUseCaption = "ExceptionFileInUseCaption";
			public const string RemoveNodeMessage = "RemoveNodeMessage";
			public const string RemoveNodeCaption = "RemoveNodeCaption";
			public const string SaveApplicationsMessage = "SaveApplicationsMessage";
			public const string SaveApplicationCaption = "SaveApplicationCaption";
			public const string InvalidSaveHierarchyMessage = "InvalidSaveHierarchyMessage";
		}


	}
}
