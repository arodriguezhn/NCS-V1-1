// WARNING:
// This file generated by the Microsoft DataWarehouse String Resource Tool 1.13.5000.0
// from information in SR.strings.   
// DO NO MODIFY THIS FILE'S CONTENTS, THEY WILL BE OVERWRITTEN
//
namespace Microsoft.Practices.EnterpriseLibrary.Tools.SecurityDatabaseConsole
{
	using System;
	using System.Resources;
	using System.Globalization;

	internal class SR
	{
		public static CultureInfo Culture
		{
			get
			{
				return Keys.Culture;
			}
			set
			{
				Keys.Culture = value;
			}
		}

		public static string MustCreateRole
		{
			get { return Keys.GetString( Keys.MustCreateRole ); }
		}
		public static string MustSelectUserToAdd
		{
			get { return Keys.GetString( Keys.MustSelectUserToAdd ); }
		}
		public static string MustSelectUserToRemove
		{
			get { return Keys.GetString( Keys.MustSelectUserToRemove ); }
		}
		public static string MustSelectUserToDelete
		{
			get { return Keys.GetString( Keys.MustSelectUserToDelete ); }
		}
		public static string MustSelectRoleToDelete
		{
			get { return Keys.GetString( Keys.MustSelectRoleToDelete ); }
		}
		public static string DeleteRoleConfirmation
		{
			get { return Keys.GetString( Keys.DeleteRoleConfirmation ); }
		}
		public static string UsersInRole (string role)
		{
			return Keys.GetString( Keys.UsersInRole, role );
		}
		public static string PasswordsMustMatch
		{
			get { return Keys.GetString( Keys.PasswordsMustMatch ); }
		}
		public static string UserAlreadyExists
		{
			get { return Keys.GetString( Keys.UserAlreadyExists ); }
		}
		public static string RoleAlreadyExists
		{
			get { return Keys.GetString( Keys.RoleAlreadyExists ); }
		}
		public static string UnhandledException
		{
			get { return Keys.GetString( Keys.UnhandledException ); }
		}
		public static string NewPasswordLabel
		{
			get { return Keys.GetString( Keys.NewPasswordLabel ); }
		}
		public static string DeleteUserConfirmation
		{
			get { return Keys.GetString( Keys.DeleteUserConfirmation ); }
		}
		public static string DeleteUserConfirmationCaption
		{
			get { return Keys.GetString( Keys.DeleteUserConfirmationCaption ); }
		}
		public static string DatabaseConnectionError
		{
			get { return Keys.GetString( Keys.DatabaseConnectionError ); }
		}
		public static string NoDatabaseExceptionMessage (string paragraphSeparator1, string paragraphSeparator2, string paragraphSeparator3, string exceptionMessage)
		{
			return Keys.GetString( Keys.NoDatabaseExceptionMessage, paragraphSeparator1, paragraphSeparator2, paragraphSeparator3, exceptionMessage );
		}

		internal class Keys 
		{
			static ResourceManager resourceManager = 
				new ResourceManager("Microsoft.Practices.EnterpriseLibrary.Tools.SecurityDatabaseConsole.SR", typeof(Microsoft.Practices.EnterpriseLibrary.Tools.SecurityDatabaseConsole.SR).Module.Assembly );

			static CultureInfo culture = null;

			public static CultureInfo Culture
			{
				get
				{
					return culture;
				}
				set
				{
					culture = value;
				}
			}

			public static string GetString( string key )
			{
				return resourceManager.GetString( key, culture );
			}
			public static string GetString( string key, params object[] args )
			{
				string msg = resourceManager.GetString( key, culture );
				msg = string.Format( msg, args );
				return msg;
			}

			public const string MustCreateRole = "MustCreateRole";
			public const string MustSelectUserToAdd = "MustSelectUserToAdd";
			public const string MustSelectUserToRemove = "MustSelectUserToRemove";
			public const string MustSelectUserToDelete = "MustSelectUserToDelete";
			public const string MustSelectRoleToDelete = "MustSelectRoleToDelete";
			public const string DeleteRoleConfirmation = "DeleteRoleConfirmation";
			public const string UsersInRole = "UsersInRole";
			public const string PasswordsMustMatch = "PasswordsMustMatch";
			public const string UserAlreadyExists = "UserAlreadyExists";
			public const string RoleAlreadyExists = "RoleAlreadyExists";
			public const string UnhandledException = "UnhandledException";
			public const string NewPasswordLabel = "NewPasswordLabel";
			public const string DeleteUserConfirmation = "DeleteUserConfirmation";
			public const string DeleteUserConfirmationCaption = "DeleteUserConfirmationCaption";
			public const string DatabaseConnectionError = "DatabaseConnectionError";
			public const string NoDatabaseExceptionMessage = "NoDatabaseExceptionMessage";
		}


	}
}
